
openapi: 3.0.3
info:
  title: UWE UniHub
  version: 0.0.0
servers:
  - url: https://uwe.dyzoon.dev/api
  
tags:
  - name: auth
    description: Auth
  - name: profiles
    description: Profiles
  - name: communities
    description: Communities
  - name: posts
    description: Posts
  - name: events
    description: Events
  - name: search
    description: Search
  - name: followers/subscriptions
    description: Followers/Subscriptions
    
paths:
  /auth:
    get:
      tags:
        - auth
      summary: Check user's token
      operationId: authGet
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          
  /auth/signup:
    post:
      tags:
        - auth
      summary: Signup as client
      operationId: authSignupPost
      requestBody:
        description: Signup data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupPost'
      responses:
        '200':
          description: Ok
          
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      operationId: authLoginPost
      requestBody:
        description: Login data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPost'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /auth/logout:  
    delete:
      tags: [auth]
      summary: Logout
      operationId: authDelete
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Ok
  /levels:
    get:
      tags: [auth]
      summary: Get available levels
      operationId: levelsGet
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Levels'
  /schools:
    get:
      tags: [auth]
      summary: Get available schools
      operationId: choolsGet
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schools'
  /departments:
    get:
      tags: [auth]
      summary: Get available departments
      operationId: departmentsGet
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Departments'
          
  # /profiles:
  #   get:
  #     tags: [profiles]
  #     summary: Get profiles
  #     operationId: profilesGet
  #     security:
  #       - sessionAuth: []
  #     responses:
  #       '200':
  #         description: Ok
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Profile'
  #   post:
  #     tags: [profiles]
  #     summary: Post Profile
  #     operationId: profilePost
  #     security:
  #       - sessionAuth: []
  #     requestBody:
  #       description: Profile
  #       content: 
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/ProfilePost'
  #     responses:
  #       '200':
  #         description: Ok
  #         content:
  #           application/json:
  #             schema:
  #                 $ref: '#/components/schemas/ProfilePost'
  
  /profiles/{profileId}:
    get:
      tags: [profiles]
      summary: Get profile by id
      operationId: profileProfileIdGet
      parameters:
        - $ref: '#/components/parameters/profileId'
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    patch:
      tags: [profiles]
      summary: Edit profile
      operationId: profileIdPatch
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        description: Profile
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilePatch'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    delete:
      tags: [profiles]
      summary: Delete profile
      operationId: profileIdDelete
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: Ok
  
  /communities:
    get:
      tags: [communities]
      summary: Get communities
      operationId: communitiesGet
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Community'
    post:
      tags: [communities]
      summary: Post Community
      operationId: communityPost
      security:
        - sessionAuth: []
      requestBody:
        description: community
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/CommunityPost'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Community'
  
  /communities/{communityId}:
    get:
      tags: [communities]
      summary: Get community by id
      operationId: communityIdGet
      parameters:
        - $ref: '#/components/parameters/communityId'
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
    patch:
      tags: [communities]
      summary: Edit community
      operationId: communityIdPatch
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      requestBody:
        description: Community
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/CommunityPatch'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
    delete:
      tags: [communities]
      summary: Delete community
      operationId: communityIdDelete
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      responses:
        '200':
          description: Ok
  
  /feed:
    get:
      tags: [posts]
      summary: Get latest posts
      operationId: postsGet
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/feedPointer'
        - $ref: '#/components/parameters/feedLimit'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    
  /posts/{postId}:
    get:
      tags: [posts]
      summary: Get post by id
      operationId: postIdGet
      parameters:
        - $ref: '#/components/parameters/postId'
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    patch:
      tags: [posts]
      summary: Edit post
      operationId: postIdPatch
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/postId'
      requestBody:
        description: Post
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/PostPatch'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      tags: [posts]
      summary: Delete post
      operationId: postIdDelete
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/postId'
      responses:
        '200':
          description: Ok
                
  /profiles/{profileId}/posts:
    get:
      tags: [posts]
      summary: Get posts of a profile
      operationId: profileIdPostsGet
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      tags: [posts]
      summary: Post as a profile
      operationId: profileIdPostsPost
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        description: Post
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/PostPost'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Post'
                  
  /communities/{communityId}/posts:
    get:
      tags: [posts]
      summary: Get posts of a community
      operationId: communityIdPostsGet
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      tags: [posts]
      summary: Post as a community
      operationId: communityIdPostsPost
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      requestBody:
        description: Post
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/PostPost'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Post'
                  
  /events:
    get:
      tags: [events]
      summary: Get events
      operationId: eventsGet
      security:
       - sessionAuth: []
      responses:
        '200':
          description: Ok
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

        
  /events/{eventId}:
    get:
      tags: [events]
      summary: Get event by id
      operationId: eventIdGet
      parameters:
        - $ref: '#/components/parameters/eventId'
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Event'
    patch:
      tags: [events]
      summary: Edit event
      operationId: eventIdPatch
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/eventId'
      requestBody:
        description: Post
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/EventPatch'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    delete:
      tags: [events]
      summary: Delete event
      operationId: eventIdDelete
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/eventId'
      responses:
        '200':
          description: Ok
          
  /profiles/{profileId}/events:
    get:
      tags: [events]
      summary: Get events related to profile
      operationId: profilesProfileIdeventsGet
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      tags: [events]
      summary: Post event as profile
      operationId: profilesProfileIdeventsPost
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        description: Event
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/EventPost'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Event'
  
  /communities/{communityId}/events:
    get:
      tags: [events]
      summary: Get events related to community
      operationId: communitiesCommunityIdeventsGet
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      tags: [events]
      summary: Post event as community
      operationId: communitiesCommunityIdeventsPost
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      requestBody:
        description: Event
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/EventPost'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Event'
          
  /search:
    get:
      tags: [search]
      summary: General search
      operationId: searchGet
      security: 
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/searchQ'
  #      - $ref: '#/components/parameters/searchTags'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Profile'
                    - $ref: '#/components/schemas/Community'
                    - $ref: '#/components/schemas/Event'
  # /search/filter:
  #   get:
  #     tags: [search]
  #     summary: Filtered search
  #     operationId: searchFilterGet
  #     security:
  #       - sessionAuth: []
  #     parameters:
  #       - $ref: '#/components/parameters/searchQ'
  #       - $ref: '#/components/parameters/filterProgram'
  #       - $ref: '#/components/parameters/filterLevel'
  #       - $ref: '#/components/parameters/filterSchool'
  #       - $ref: '#/components/parameters/filterDepartment'
  #     responses:
  #       '200':
  #         description: Ok
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 - $ref: '#/components/schemas/Profile'

  
  /profiles/{profileId}/followers:
    get:
      tags: [followers/subscriptions]
      summary: Get followers of a profile
      operationId: profileIdFollowersGet
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
                
  /communities/{communityId}/followers:
    get:
      tags: [followers/subscriptions]
      summary: Get followers of a community
      operationId: communityIdFollowersGet
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
  
  /profiles/{profileId}/subscriptions:
    get:
      tags: [followers/subscriptions]
      summary: Get subscriptions of a profile
      operationId: profileIdSubscriptionsGet
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Profile'
                    - $ref: '#/components/schemas/Community'
  /profiles/{profileId}/follow:
    post:
      tags: [followers/subscriptions]
      summary: Follow a profile
      operationId: profileIdFollowPost
      security: 
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /profiles/{profileId}/unfollow:
    delete:
      tags: [followers/subscriptions]
      summary: Unfollow a profile
      operationId: profileIdFollowDelete
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        
                
  /communities/{communityId}/follow:
    post:
      tags: [followers/subscriptions]
      summary: Follow a community
      operationId: communityIdFollow
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
  /communities/{communityId}/unfollow:
    delete:
      tags: [followers/subscriptions]
      summary: Unfollow a community
      operationId: communityIdFollowDelete
      security:
        - sessionAuth: []
      parameters:
        - $ref: '#/components/parameters/communityId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
                
components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: sessionId
      
  parameters:
    profileId:
      name: profileId
      in: path
      required: true
      schema:
        type: number
    communityId:
      name: communityId
      in: path
      required: true
      schema:
        type: string
    postId:
      name: postId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    eventId:
      name: eventId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    feedPointer:
      name: feedPointer
      in: query
      required: false
      schema:
        type: number
    feedLimit:
      name: feedLimit
      in: query
      required: false
      schema:
        type: number
    searchQ:
      name: searchQ
      in: query
      required: false
      schema:
        type: string
        
  schemas:
  
    SignupPost:
      type: object
      properties:
        id:
          type: number
        password:
          type: string
        first_name:
          type: string
        last_name: 
          type: string
        is_staff:
          type: boolean
        student:
          allOf:
            - $ref: '#/components/schemas/ProfileStudentInfo'
          nullable: true
        staff:
          allOf:
            - $ref: '#/components/schemas/ProfileStaffInfo'
          nullable: true
      required: [id, password, first_name, last_name, is_staff, student, staff]
  
    ProfileStudentInfo:
      type: object
      properties:
        program: 
          type: string
        level:
          type: string
        school:
          type: string
      required: [program, level, school]
      
    ProfileStaffInfo:
      type: object
      properties:
        position:
          type: string
        department:
          type: string
      required: [position, department]
      
    Profile:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name: 
          type: string
        is_staff:
          type: boolean
        bio:
          type: string
          nullable: true
        subscribers:
          type: number
        subscriptions:
          type: number
        student:
          allOf:
            - $ref: '#/components/schemas/ProfileStudentInfo'
          nullable: true
        staff:
          allOf:
            - $ref: '#/components/schemas/ProfileStaffInfo'
          nullable: true
      required: [id, first_name, last_name, bio, subscribers, subscriptions, student, staff]

    ProfilePatch:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        bio:
          type: string
          nullable: true
      
    Community:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        bio:
          type: string
          nullable: true
        admin:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Profile'
        subscribers:
          type: number
      required: [id,name, bio, subscribers]
    
    CommunityPost:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        bio:
          type: string
          nullable: true
      required: [id,name, bio]
          
    CommunityPatch:
      type: object
      properties:
        name:
          type: string
        bio:
          type: string
          nullable: true
    
    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        created_at:
          type: string
          format: date-time
        event_id:
          type: string
          format: uuid
          nullable: true
        profile:
          oneOf:
            - $ref: '#/components/schemas/Profile'
        community:
          oneOf:
            - $ref: '#/components/schemas/Community'
          nullable: True
      required: [id, content, created_at, event_id, profile, community]
    
    PostPost:
      type: object
      properties:
        content:
            type: string
        event_id:
          type: string
          format: uuid
          nullable: true
      required: [content, event_id]
      
    PostPatch:
      type: object
      properties:
        content:
            type: string
        event_id:
          type: string
          format: uuid
          nullable: true
    
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        location:
          type: string
        created_at:
          type: string
          format: date-time
        date:
          type: string
          format: date-time
        profile:
          oneOf:
            - $ref: '#/components/schemas/Profile'
        community:
          oneOf:
            - $ref: '#/components/schemas/Community'
          nullable: True
      required: [id, description, created_at, location, date, profile, community]

    EventPost:
      type: object
      properties:
        description:
          type: string
        location:
          type: string
        date:
          type: string
          format: date-time
      required: [description, location, date]
      
    EventPatch:
      type: object
      properties:
        description:
          type: string
        location:
          type: string
        date:
          type: string
          format: date-time
      
    LoginPost:
      type: object
      properties:
        id:
          type: number
        password:
          type: string
      required: [id, password]
    
    Levels:
      type: object
      properties:
        levels:
          type: array
          items: 
            type: string
    
    Schools:
      type: object
      properties:
        schools:
          type: array
          items: 
            type: string
    
    Departments:
      type: object
      properties:
        departments:
          type: array
          items: 
            type: string
        